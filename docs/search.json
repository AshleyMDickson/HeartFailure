[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Heart Failure Analysis",
    "section": "",
    "text": "In this document, I build several models of the heart failure data that are able to handle non-linearities in the predictors, generate predictions and perform model validation."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site has been set up as a temporary home for this analysis such that it can be shared with my supervisors.\nHow to do math in LaTeX:\nInline: \\(\\alpha\\)\nIndented:\n\\[\n\\hat{y}_i = \\beta_0 + \\sum_{j=1}^p \\beta_j x_{ji}\n\\]\n\nx = seq(0, 2*pi, by = 0.1)\ny = sin(x) + rnorm(length(x), 0, 0.3)\nplot(x,y) +\n  title(\"Sinusoidal Simulation\")\n\n\n\n\n\n\n\n\ninteger(0)"
  },
  {
    "objectID": "index.html#environment",
    "href": "index.html#environment",
    "title": "Heart Failure Analysis",
    "section": "Environment",
    "text": "Environment\nLoad the requisite libraries.\n\nlibrary(rms)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(gtsummary)\nlibrary(ggplot2)\nlibrary(splines)\nlibrary(broom)\nlibrary(pROC)\nlibrary(knitr)"
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Heart Failure Analysis",
    "section": "Data",
    "text": "Data\nHaving loaded the various libraries needed, let’s import our heart failure data.\n\nsetwd(\"C:/Users/rmhimdi/OneDrive - University College London/Documents/HeartFailure\")\ndf &lt;- read_excel(\"simulateddata_LR_NL.xlsx\")\n\nDiscretise age and recode sex.\n\ndf$age &lt;- round(df$age, 0)\nn = 5\ndf &lt;- df %&gt;%\n  mutate(Age_ = paste0(\n    n*floor(age/n), \"-\",n*(floor(age/n)+1)\n    )\n  )\ndf$sex &lt;- factor(df$sex, levels = c(0, 1), labels = c(\"Male\", \"Female\")) \n## Assuming Female = 1 since this seems mildly protective (cf. MAGGIC), but will need to check.\n\nRenaming varibles.\n\ndf &lt;- \n  df %&gt;% \n  rename(\n    Outcome = outcome,\n    Age = age,\n    Sex = sex,\n    Creatinine = creatineDischarge,\n    Sodium = sodiumDischarge,\n    Potassium = potassiumDischarge,\n    Urea = ureaDischarge,\n    S_bp =  sbpAdmission,\n    HR = hrAdmission,\n    Hb = hbDischarge,\n    Diabetes = diabetes,\n    COPD = copd,\n    IHD = ihd, \n    ValveDisease = valveDisease,\n    NYHA_class = nyha,\n    PeripheralOedema = peripheralOedema,\n    AF = af,\n    eGFR = egfr_full\n  )\n\nInspect the processed data.\n\nkable(head(df))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutcome\nAge\nCreatinine\nSodium\nPotassium\nUrea\nS_bp\nHR\nHb\nSex\nDiabetes\nCOPD\nIHD\nValveDisease\nNYHA_class\nPeripheralOedema\nAF\neGFR\nAge_\n\n\n\n\n0\n62\n76.99999\n138\n4.2\n19.6100\n113\n119\n11.1\nMale\n1\n0\n1\n0\n1\n0\n1\n88.70592\n60-65\n\n\n1\n90\n142.00003\n146\n4.4\n20.9000\n98\n78\n12.1\nMale\n0\n0\n1\n1\n0\n0\n0\n40.60656\n90-95\n\n\n1\n84\n143.00003\n141\n4.0\n15.7056\n132\n102\n13.7\nMale\n0\n1\n0\n0\n1\n1\n0\n40.90517\n80-85\n\n\n0\n75\n80.00000\n137\n4.0\n7.5000\n152\n100\n11.6\nFemale\n0\n0\n0\n0\n1\n1\n0\n60.71780\n75-80\n\n\n0\n84\n123.99999\n139\n4.2\n8.2000\n201\n46\n11.8\nFemale\n0\n0\n1\n0\n0\n0\n0\n35.78796\n80-85\n\n\n0\n78\n118.00001\n140\n4.7\n12.7000\n104\n64\n10.6\nFemale\n0\n0\n0\n0\n1\n1\n1\n38.37403\n75-80\n\n\n\n\n\n\nHold Out\nDuring model evaluation, we will need to conduct predictive validation using the test set having estimated the model coefficients on the training set.\n\nset.seed(1729)\nrecords &lt;- dim(df)[1]\n\ntrain_size &lt;- floor(0.8*records)\ntrain_index &lt;- sample(seq_len(records), size = train_size)\ntrain &lt;- df[train_index,]\ntest &lt;- df[-train_index,]\nprint(paste(\"Size of training set is: \", nrow(train)))\n\n[1] \"Size of training set is:  43264\"\n\nprint(paste(\"Size of testing set is: \", nrow(test)))\n\n[1] \"Size of testing set is:  10817\""
  },
  {
    "objectID": "index.html#full-model",
    "href": "index.html#full-model",
    "title": "Heart Failure Analysis",
    "section": "Full Model",
    "text": "Full Model\nRun the naive model with all variables to see outline effect sizes.\n\n#Sans age categorisation\nfull_model &lt;- glm(Outcome ~ Age + Sex  + Creatinine + Sodium + Potassium + Urea + S_bp + HR + Hb+ Diabetes + COPD + IHD + ValveDisease + NYHA_class + PeripheralOedema + AF + eGFR, family = binomial, data = df)\nprint(summary(full_model))\n\n\nCall:\nglm(formula = Outcome ~ Age + Sex + Creatinine + Sodium + Potassium + \n    Urea + S_bp + HR + Hb + Diabetes + COPD + IHD + ValveDisease + \n    NYHA_class + PeripheralOedema + AF + eGFR, family = binomial, \n    data = df)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)      -7.1398644  0.4689428 -15.225  &lt; 2e-16 ***\nAge               0.0473564  0.0016273  29.102  &lt; 2e-16 ***\nSexFemale         0.1904866  0.0316661   6.015 1.79e-09 ***\nCreatinine        0.0036828  0.0002298  16.024  &lt; 2e-16 ***\nSodium            0.0077452  0.0028043   2.762 0.005746 ** \nPotassium         0.3237376  0.0238317  13.584  &lt; 2e-16 ***\nUrea              0.0375205  0.0013179  28.469  &lt; 2e-16 ***\nS_bp             -0.0203323  0.0006165 -32.982  &lt; 2e-16 ***\nHR                0.0046018  0.0006626   6.945 3.78e-12 ***\nHb               -0.0256031  0.0075885  -3.374 0.000741 ***\nDiabetes         -0.1079845  0.0326271  -3.310 0.000934 ***\nCOPD              0.2200697  0.0363999   6.046 1.49e-09 ***\nIHD               0.0765564  0.0302083   2.534 0.011268 *  \nValveDisease      0.0518244  0.0321303   1.613 0.106757    \nNYHA_class       -0.0267937  0.0367931  -0.728 0.466475    \nPeripheralOedema  0.0914774  0.0304967   3.000 0.002704 ** \nAF               -0.0345800  0.0303462  -1.140 0.254488    \neGFR              0.0016651  0.0009438   1.764 0.077691 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 38473  on 54080  degrees of freedom\nResidual deviance: 32723  on 54063  degrees of freedom\nAIC: 32759\n\nNumber of Fisher Scoring iterations: 6\n\nprint(\"Odd Ratios\")\n\n[1] \"Odd Ratios\"\n\nkable(exp(coef(full_model)))\n\n\n\n\n\nx\n\n\n\n\n(Intercept)\n0.0007929\n\n\nAge\n1.0484956\n\n\nSexFemale\n1.2098382\n\n\nCreatinine\n1.0036896\n\n\nSodium\n1.0077752\n\n\nPotassium\n1.3822845\n\n\nUrea\n1.0382333\n\n\nS_bp\n0.9798730\n\n\nHR\n1.0046124\n\n\nHb\n0.9747219\n\n\nDiabetes\n0.8976415\n\n\nCOPD\n1.2461636\n\n\nIHD\n1.0795631\n\n\nValveDisease\n1.0531908\n\n\nNYHA_class\n0.9735621\n\n\nPeripheralOedema\n1.0957920\n\n\nAF\n0.9660111\n\n\neGFR\n1.0016665\n\n\n\n\n\nWhile these Odds Ratios give us an outline picture of the effects, it is unlikely that all relationships are linear in the ‘true’ model. So, let’s try a few ways of relaxing the linearity assumption."
  },
  {
    "objectID": "index.html#age",
    "href": "index.html#age",
    "title": "Heart Failure Analysis",
    "section": "Age",
    "text": "Age\nLet’s try to identify any nonlinear age effect. We can do this in a few different ways.\n\nCategorisation\nLet’s start by using the age quintiles. We run two models to compare:\n\nmod1 &lt;- train %&gt;% \n  glm(formula = Outcome ~ Age, family = binomial)\nsummary(mod1)\n\n\nCall:\nglm(formula = Outcome ~ Age, family = binomial, data = .)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -5.647031   0.130533  -43.26   &lt;2e-16 ***\nAge          0.044565   0.001569   28.40   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 30626  on 43263  degrees of freedom\nResidual deviance: 29667  on 43262  degrees of freedom\nAIC: 29671\n\nNumber of Fisher Scoring iterations: 5\n\n\n\nmod1 &lt;- train %&gt;% \n  glm(formula = Outcome ~ Age_, family = binomial)\nsummary(mod1)\n\n\nCall:\nglm(formula = Outcome ~ Age_, family = binomial, data = .)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  -0.7867     0.1689  -4.657 3.21e-06 ***\nAge_105-110  -1.5159     1.0623  -1.427 0.153587    \nAge_15-20   -12.7794   267.7056  -0.048 0.961926    \nAge_20-25   -12.7794   101.1833  -0.126 0.899495    \nAge_25-30    -2.5092     0.7396  -3.392 0.000693 ***\nAge_30-35    -3.2993     0.7328  -4.503 6.71e-06 ***\nAge_35-40    -3.3297     0.6061  -5.494 3.93e-08 ***\nAge_40-45    -3.0072     0.4179  -7.197 6.17e-13 ***\nAge_45-50    -2.6675     0.2878  -9.268  &lt; 2e-16 ***\nAge_50-55    -2.6546     0.2487 -10.676  &lt; 2e-16 ***\nAge_55-60    -2.4627     0.2194 -11.225  &lt; 2e-16 ***\nAge_60-65    -1.9998     0.1932 -10.353  &lt; 2e-16 ***\nAge_65-70    -1.7313     0.1833  -9.444  &lt; 2e-16 ***\nAge_70-75    -1.7104     0.1776  -9.632  &lt; 2e-16 ***\nAge_75-80    -1.3749     0.1741  -7.898 2.84e-15 ***\nAge_80-85    -1.2114     0.1722  -7.034 2.01e-12 ***\nAge_85-90    -1.0309     0.1719  -5.997 2.01e-09 ***\nAge_90-95    -0.7899     0.1728  -4.572 4.84e-06 ***\nAge_95-100   -0.4525     0.1795  -2.520 0.011723 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 30626  on 43263  degrees of freedom\nResidual deviance: 29658  on 43245  degrees of freedom\nAIC: 29696\n\nNumber of Fisher Scoring iterations: 12\n\n\n\n\nSplines\n\nmod3 &lt;- glm(Outcome ~ ns(Age, df=3) + Sex  + ns(Creatinine, df=3) + Sodium + ns(Potassium, df=3) + ns(Urea, df=3) + S_bp + HR + Hb+ Diabetes + COPD + IHD + ValveDisease + NYHA_class + PeripheralOedema + AF + eGFR, family = binomial, data = train)\nprint(summary(mod3))\n\n\nCall:\nglm(formula = Outcome ~ ns(Age, df = 3) + Sex + ns(Creatinine, \n    df = 3) + Sodium + ns(Potassium, df = 3) + ns(Urea, df = 3) + \n    S_bp + HR + Hb + Diabetes + COPD + IHD + ValveDisease + NYHA_class + \n    PeripheralOedema + AF + eGFR, family = binomial, data = train)\n\nCoefficients:\n                          Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)             -3.2297212  0.8855541  -3.647 0.000265 ***\nns(Age, df = 3)1         2.2499750  0.2130202  10.562  &lt; 2e-16 ***\nns(Age, df = 3)2         5.3885694  0.8362700   6.444 1.17e-10 ***\nns(Age, df = 3)3         3.6383468  0.2490317  14.610  &lt; 2e-16 ***\nSexFemale                0.3452108  0.0552986   6.243 4.30e-10 ***\nns(Creatinine, df = 3)1  4.0797090  0.5571073   7.323 2.42e-13 ***\nns(Creatinine, df = 3)2  1.7759930  0.8101710   2.192 0.028371 *  \nns(Creatinine, df = 3)3 -1.2744470  0.7870926  -1.619 0.105408    \nSodium                   0.0051292  0.0031289   1.639 0.101149    \nns(Potassium, df = 3)1  -1.4475200  0.1351737 -10.709  &lt; 2e-16 ***\nns(Potassium, df = 3)2  -4.4924440  0.6021319  -7.461 8.59e-14 ***\nns(Potassium, df = 3)3   2.0966514  0.3195196   6.562 5.31e-11 ***\nns(Urea, df = 3)1        3.5024779  0.1396471  25.081  &lt; 2e-16 ***\nns(Urea, df = 3)2        3.5433371  0.2873837  12.330  &lt; 2e-16 ***\nns(Urea, df = 3)3        1.0218810  0.2459434   4.155 3.25e-05 ***\nS_bp                    -0.0189166  0.0006991 -27.060  &lt; 2e-16 ***\nHR                       0.0051112  0.0007596   6.729 1.71e-11 ***\nHb                      -0.0137585  0.0086356  -1.593 0.111108    \nDiabetes                -0.1036697  0.0375945  -2.758 0.005823 ** \nCOPD                     0.2105146  0.0419030   5.024 5.06e-07 ***\nIHD                      0.1033113  0.0345790   2.988 0.002811 ** \nValveDisease             0.0688294  0.0367263   1.874 0.060914 .  \nNYHA_class              -0.0464105  0.0421425  -1.101 0.270777    \nPeripheralOedema         0.0174441  0.0348879   0.500 0.617072    \nAF                      -0.0416977  0.0347090  -1.201 0.229615    \neGFR                     0.0156079  0.0031332   4.981 6.31e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 30626  on 43263  degrees of freedom\nResidual deviance: 25036  on 43238  degrees of freedom\nAIC: 25088\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\nHierarchical\nThis is a Quarto website. To learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]